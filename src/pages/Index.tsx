import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Separator } from '@/components/ui/separator';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [activeSection, setActiveSection] = useState('origins');

  const sections = [
    { id: 'origins', title: '–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è', icon: 'Users', skull: 'üíÄ' },
    { id: 'careers', title: '–ö–∞—Ä—å–µ—Ä—ã', icon: 'Briefcase', skull: '‚öîÔ∏è' },
    { id: 'equipment', title: '–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ', icon: 'Sword', skull: 'üó°Ô∏è' },
    { id: 'rules', title: '–ü—Ä–∞–≤–∏–ª–∞', icon: 'Book', skull: 'üìú' },
    { id: 'spells', title: '–ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è', icon: 'Sparkles', skull: 'üîÆ' },
    { id: 'faith', title: '–í–µ—Ä–∞', icon: 'Cross', skull: '‚õ™' },
    { id: 'bestiary', title: '–ë–µ—Å—Ç–∏–∞—Ä–∏–π', icon: 'Dragon', skull: 'üê≤' },
    { id: 'world', title: '–ú–∏—Ä', icon: 'Globe', skull: 'üè∞' }
  ];

  const sampleData = {
    origins: [
      { name: '–ò–º–ø–µ—Ä–µ—Ü', description: '–ñ–∏—Ç–µ–ª—å –≤–µ–ª–∏–∫–æ–π –ò–º–ø–µ—Ä–∏–∏, —Ü–µ–Ω—Ç—Ä–∞ —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏', stats: 'WS+10, BS+5, Fel+5', links: ['–°–æ–ª–¥–∞—Ç', '–¢–æ—Ä–≥–æ–≤–µ—Ü'] },
      { name: '–î–≤–∞—Ä—Ñ', description: '–°—Ç–æ–π–∫–∏–π –≥–æ—Ä–Ω—ã–π –Ω–∞—Ä–æ–¥, –º–∞—Å—Ç–µ—Ä–∞ –∫—É–∑–Ω–µ—á–Ω–æ–≥–æ –¥–µ–ª–∞', stats: 'T+10, WP+10, Fel-10', links: ['–í–æ–∏–Ω', '–†–µ–º–µ—Å–ª–µ–Ω–Ω–∏–∫'] },
      { name: '–≠–ª—å—Ñ', description: '–î—Ä–µ–≤–Ω–∏–π –Ω–∞—Ä–æ–¥ —Å –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏', stats: 'Dex+20, Int+10, T-10', links: ['–ú–∞–≥', '–†–∞–∑–≤–µ–¥—á–∏–∫'] }
    ],
    careers: [
      { name: '–°–æ–ª–¥–∞—Ç', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–æ–∏–Ω –∏–º–ø–µ—Ä—Å–∫–æ–π –∞—Ä–º–∏–∏', advance: 'WS+20, BS+15, S+10', links: ['–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ: –ú–µ—á'] },
      { name: '–ú–∞–≥', description: '–ò–∑—É—á–∞—é—â–∏–π —Ç–∞–π–Ω—ã –º–∞–≥–∏–∏', advance: 'Int+20, WP+15, Mag+3', links: ['–ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è: –ú–∞–ª–∞—è –º–∞–≥–∏—è'] },
      { name: '–†–∞–∑–≤–µ–¥—á–∏–∫', description: '–°–ª–µ–¥–æ–ø—ã—Ç –∏ –æ—Ö–æ—Ç–Ω–∏–∫', advance: 'BS+20, Dex+15, Per+10', links: ['–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ: –õ—É–∫'] }
    ],
    equipment: [
      { name: '–ú–µ—á', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –æ—Ä—É–∂–∏–µ –±–ª–∏–∂–Ω–µ–≥–æ –±–æ—è', stats: '–£—Ä–æ–Ω: SB+4, –ì—Ä—É–ø–ø–∞: –û–±—ã—á–Ω–æ–µ', links: ['–°–æ–ª–¥–∞—Ç', '–í–æ–∏–Ω'] },
      { name: '–õ—É–∫', description: '–î–∞–ª—å–Ω–æ–±–æ–π–Ω–æ–µ –æ—Ä—É–∂–∏–µ –¥–ª—è –æ—Ö–æ—Ç—ã', stats: '–£—Ä–æ–Ω: 3, –î–∞–ª—å–Ω–æ—Å—Ç—å: 24/48', links: ['–†–∞–∑–≤–µ–¥—á–∏–∫'] },
      { name: '–ö–æ–ª—å—á—É–≥–∞', description: '–ó–∞—â–∏—Ç–Ω–∞—è –±—Ä–æ–Ω—è –∏–∑ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∫–æ–ª–µ—Ü', stats: '–ë—Ä–æ–Ω—è: 1 (–ö–æ—Ä–ø—É—Å, –†—É–∫–∏)', links: ['–°–æ–ª–¥–∞—Ç'] }
    ],
    spells: [
      { name: '–ú–∞–ª–∞—è –º–∞–≥–∏—è', description: '–ü—Ä–æ—Å—Ç—ã–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö', stats: '–ò–ú: 4, –î–∏—Å—Ç–∞–Ω—Ü–∏—è: –ö–∞—Å–∞–Ω–∏–µ', links: ['–ú–∞–≥'] },
      { name: '–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä', description: '–ú–µ—Ç–∞—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –æ–≥–Ω—è', stats: '–ò–ú: 12, –£—Ä–æ–Ω: 4, –î–∏—Å—Ç–∞–Ω—Ü–∏—è: 48', links: ['–ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è: –ú–∞–ª–∞—è –º–∞–≥–∏—è'] }
    ],
    rules: [
      { name: '–ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–æ–≤', description: '–û—Å–Ω–æ–≤–Ω–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞ –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç d100', stats: '–£—Å–ø–µ—Ö: <= —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏', links: [] },
      { name: '–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞', description: '–ü–æ—Ä—è–¥–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –≤ –±–æ—é', stats: 'I + 1d10', links: ['–ö–∞—Ä—å–µ—Ä—ã'] }
    ],
    faith: [
      { name: '–°–∏–≥–º–∞—Ä', description: '–ë–æ–≥-–∏–º–ø–µ—Ä–∞—Ç–æ—Ä, –ø–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å –ò–º–ø–µ—Ä–∏–∏', stats: '–î–æ–º–µ–Ω—ã: –í–æ–π–Ω–∞, –ó–∞—â–∏—Ç–∞', links: ['–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è: –ò–º–ø–µ—Ä–µ—Ü'] },
      { name: '–£–ª—å—Ä–∏–∫', description: '–ë–æ–≥ –≤–æ–ª–∫–æ–≤ –∏ –∑–∏–º—ã', stats: '–î–æ–º–µ–Ω—ã: –ü—Ä–∏—Ä–æ–¥–∞, –í–æ–π–Ω–∞', links: [] }
    ],
    bestiary: [
      { name: '–ì–æ–±–ª–∏–Ω', description: '–ú–µ–ª–∫–∏–π –∑–µ–ª–µ–Ω–æ–∫–æ–∂–∏–π', stats: 'WS: 25, BS: 30, T: 25', links: ['–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ: –ö–æ–ø—å–µ'] },
      { name: '–û—Ä–∫', description: '–ö—Ä—É–ø–Ω—ã–π –∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –∑–µ–ª–µ–Ω–æ–∫–æ–∂–∏–π', stats: 'WS: 35, S: 35, T: 35', links: ['–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ: –¢–æ–ø–æ—Ä'] }
    ],
    world: [
      { name: '–ò–º–ø–µ—Ä–∏—è', description: '–í–µ–ª–∏—á–∞–π—à–∞—è —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∞—è –Ω–∞—Ü–∏—è', stats: '–°—Ç–æ–ª–∏—Ü–∞: –ê–ª—å—Ç–¥–æ—Ä—Ñ', links: ['–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è: –ò–º–ø–µ—Ä–µ—Ü'] },
      { name: '–ö–∞—Ä–∞–∫ –ö–∞–¥—Ä–∏–Ω', description: '–î–≤–∞—Ä—Ñ—Å–∫–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å –≥–æ—Ä–Ω—ã—Ö –ø–µ—Ä–µ–≤–∞–ª–æ–≤', stats: '–¢–∏–ø: –ö—Ä–µ–ø–æ—Å—Ç—å', links: ['–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è: –î–≤–∞—Ä—Ñ'] }
    ]
  };

  const CrossLink = ({ text, section }: { text: string; section?: string }) => {
    if (!section) return <span className="text-warhammer-dark">{text}</span>;
    
    return (
      <button
        onClick={() => setActiveSection(section)}
        className="text-warhammer-gold hover:text-warhammer-beige underline transition-colors font-medium"
      >
        {text}
      </button>
    );
  };

  return (
    <div className="min-h-screen bg-gothic-gradient text-foreground">
      {/* Gothic Header */}
      <header className="bg-blood-gradient text-white shadow-2xl border-b-4 border-warhammer-gold relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-transparent via-warhammer-blood/20 to-transparent animate-pulse"></div>
        <div className="container mx-auto px-6 py-12 relative z-10">
          <div className="text-center">
            <div className="flex justify-center items-center gap-4 mb-6">
              <span className="text-6xl">üíÄ</span>
              <h1 className="font-cinzel text-6xl font-bold tracking-wider drop-shadow-lg">
                WARHAMMER
              </h1>
              <span className="text-6xl">üíÄ</span>
            </div>
            <h2 className="font-cinzel text-3xl font-semibold mb-4 text-warhammer-gold drop-shadow-md">
              The Old World Roleplay
            </h2>
            <p className="font-cormorant text-xl italic max-w-3xl mx-auto text-warhammer-beige">
              –í –º—Ä–∞—á–Ω—ã—Ö –≥–ª—É–±–∏–Ω–∞—Ö –°—Ç–∞—Ä–æ–≥–æ –ú–∏—Ä–∞ –Ω–µ—Ç –º–µ—Å—Ç–∞ –≥–µ—Ä–æ—è–º ‚Äî –µ—Å—Ç—å –ª–∏—à—å –≤—ã–∂–∏–≤—à–∏–µ
            </p>
            <div className="mt-6 text-warhammer-blood text-lg font-bold">
              ‚öîÔ∏è In the grim darkness of the Old World, there is only WAR ‚öîÔ∏è
            </div>
          </div>
        </div>
      </header>

      {/* Dark Navigation */}
      <nav className="bg-warhammer-dark/95 backdrop-blur-sm sticky top-0 z-40 shadow-xl border-b-2 border-warhammer-steel">
        <div className="container mx-auto px-6 py-4">
          <div className="flex flex-wrap justify-center gap-2">
            {sections.map((section) => (
              <Button
                key={section.id}
                variant={activeSection === section.id ? "default" : "outline"}
                size="sm"
                onClick={() => setActiveSection(section.id)}
                className={`font-cormorant font-semibold transition-all hover:scale-105 border-warhammer-steel
                  ${activeSection === section.id 
                    ? 'bg-warhammer-gold text-warhammer-dark shadow-lg' 
                    : 'bg-warhammer-shadow hover:bg-warhammer-steel text-warhammer-beige'
                  }`}
              >
                <span className="mr-2">{section.skull}</span>
                <Icon name={section.icon as any} className="w-4 h-4 mr-2" />
                {section.title}
              </Button>
            ))}
          </div>
        </div>
      </nav>

      {/* Main Content */}
      <main className="container mx-auto px-6 py-8">
        <div className="animate-fade-in">
          {/* Section Header */}
          <div className="text-center mb-8">
            <h2 className="font-cinzel text-4xl font-bold text-warhammer-dark mb-4">
              {sections.find(s => s.id === activeSection)?.title}
            </h2>
            <Separator className="w-32 mx-auto bg-warhammer-gold h-1" />
          </div>

          {/* Content Grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {sampleData[activeSection as keyof typeof sampleData]?.map((item, index) => (
              <Card key={index} className="hover:shadow-xl transition-all duration-300 hover:scale-105 bg-white/95 backdrop-blur-sm border-2 border-warhammer-gold/20">
                <CardHeader className="pb-3">
                  <div className="flex items-center justify-between">
                    <CardTitle className="font-cinzel text-xl text-warhammer-dark flex items-center gap-2">
                      <Icon 
                        name={sections.find(s => s.id === activeSection)?.icon as any} 
                        className="w-5 h-5 text-warhammer-gold" 
                      />
                      {item.name}
                    </CardTitle>
                    <Badge variant="secondary" className="bg-warhammer-beige text-warhammer-dark font-cormorant">
                      {sections.find(s => s.id === activeSection)?.title}
                    </Badge>
                  </div>
                </CardHeader>
                <CardContent className="space-y-4">
                  <CardDescription className="font-cormorant text-base leading-relaxed text-warhammer-dark">
                    {item.description}
                  </CardDescription>
                  
                  {item.stats && (
                    <div className="bg-warhammer-parchment p-3 rounded-lg border border-warhammer-gold/30">
                      <p className="font-merriweather text-sm font-medium text-warhammer-dark">
                        üìä {item.stats}
                      </p>
                    </div>
                  )}
                  
                  {item.advance && (
                    <div className="bg-warhammer-parchment p-3 rounded-lg border border-warhammer-gold/30">
                      <p className="font-merriweather text-sm font-medium text-warhammer-dark">
                        üìà {item.advance}
                      </p>
                    </div>
                  )}

                  {item.links && item.links.length > 0 && (
                    <div className="space-y-2">
                      <p className="font-cormorant font-semibold text-sm text-warhammer-dark">
                        üîó –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:
                      </p>
                      <div className="flex flex-wrap gap-1">
                        {item.links.map((link, linkIndex) => {
                          const [linkSection, linkText] = link.includes(':') ? link.split(': ') : [null, link];
                          const targetSection = linkSection?.toLowerCase().replace('–ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è', 'origins')
                            .replace('–∫–∞—Ä—å–µ—Ä—ã', 'careers')
                            .replace('—Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ', 'equipment')
                            .replace('–∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è', 'spells');
                          
                          return (
                            <Badge 
                              key={linkIndex} 
                              variant="outline" 
                              className="cursor-pointer hover:bg-warhammer-gold hover:text-white transition-colors font-cormorant"
                              onClick={() => targetSection && setActiveSection(targetSection)}
                            >
                              {linkText || link}
                            </Badge>
                          );
                        })}
                      </div>
                    </div>
                  )}
                </CardContent>
              </Card>
            ))}
          </div>

          {/* Quick Navigation Footer */}
          <div className="mt-12 bg-warhammer-dark text-white p-6 rounded-xl">
            <h3 className="font-cinzel text-xl font-bold mb-4 text-center text-warhammer-beige">
              üóÇÔ∏è –ë—ã—Å—Ç—Ä–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
            </h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              {sections.map((section) => (
                <Button
                  key={section.id}
                  variant="ghost"
                  className="justify-start text-white hover:bg-warhammer-gold/20 hover:text-warhammer-beige font-cormorant"
                  onClick={() => setActiveSection(section.id)}
                >
                  <Icon name={section.icon as any} className="w-4 h-4 mr-2" />
                  {section.title}
                </Button>
              ))}
            </div>
          </div>
        </div>
      </main>

      {/* Footer */}
      <footer className="bg-warhammer-dark text-white mt-16">
        <div className="container mx-auto px-6 py-8 text-center">
          <p className="font-cormorant text-lg">
            ‚öîÔ∏è –í grimdark-–±—É–¥—É—â–µ–º –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤–æ–π–Ω–∞... –∏ –æ—Ç–ª–∏—á–Ω—ã–µ —Ä–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã! ‚öîÔ∏è
          </p>
          <p className="font-merriweather text-sm mt-2 text-warhammer-beige">
            –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ Warhammer Fantasy Roleplay ‚Ä¢ –°—Ç–∞—Ä—ã–π –ú–∏—Ä –∂–¥—ë—Ç –≥–µ—Ä–æ–µ–≤
          </p>
        </div>
      </footer>
    </div>
  );
};

export default Index;